{"version":3,"file":"UserDefaults.js","sourceRoot":"","sources":["../src/UserDefaults.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAM,0BAA0B,CAAC;AAExD,MAAM,OAAO,YAAY;IACf,SAAS,CAAS;IAE1B,YAAY,SAAkB;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,MAAc;QACtB,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClE,OAAO,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,MAAc,EAAE,KAAU;QAClC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YAC1C,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;QACD,QAAQ,OAAO,KAAK,EAAE,CAAC;YACrB,KAAK,QAAQ;gBACX,OAAO,MAAM,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACzE,KAAK,QAAQ;gBACX,OAAO,MAAM,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACzE,KAAK,SAAS;gBACZ,OAAO,MAAM,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACvE,KAAK,QAAQ;gBACX,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;oBACzB,OAAO,MAAM,gBAAgB,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBACxE,CAAC;gBACD,OAAO,MAAM,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3E,CAAC;IACH,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,MAAc;QACzB,OAAO,MAAM,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,MAAM,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,SAAS;QACb,OAAO,MAAM,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;CACF","sourcesContent":["import ExpoWidgetBridge from \"./ExpoWidgetBridgeModule\";\n\nexport class UserDefaults {\n  private suiteName: string;\n\n  constructor(suiteName?: string) {\n    this.suiteName = suiteName || \"\";\n  }\n\n  async get(forKey: string) {\n    const result = await ExpoWidgetBridge.get(forKey, this.suiteName);\n    return result === null ? undefined : result;\n  }\n\n  async set(forKey: string, value: any) {\n    if (value === undefined || value === null) {\n      return await this.remove(forKey);\n    }\n    switch (typeof value) {\n      case \"string\":\n        return await ExpoWidgetBridge.setString(forKey, value, this.suiteName);\n      case \"number\":\n        return await ExpoWidgetBridge.setNumber(forKey, value, this.suiteName);\n      case \"boolean\":\n        return await ExpoWidgetBridge.setBool(forKey, value, this.suiteName);\n      case \"object\":\n        if (Array.isArray(value)) {\n          return await ExpoWidgetBridge.setArray(forKey, value, this.suiteName);\n        }\n        return await ExpoWidgetBridge.setObject(forKey, value, this.suiteName);\n    }\n  }\n\n  async remove(forKey: string) {\n    return await ExpoWidgetBridge.remove(forKey, this.suiteName);\n  }\n\n  async getAll() {\n    return await ExpoWidgetBridge.getAll(this.suiteName);\n  }\n\n  async removeAll() {\n    return await ExpoWidgetBridge.removeAll(this.suiteName);\n  }\n}\n"]}